<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="6" hostname="IN-39DXTN3" failures="0" tests="8" name="Test" time="18.353" errors="0" timestamp="2022-11-16T13:53:15 IST">
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.getStatus()&amp;quot; because the return value of &amp;quot;testBase.testBase.getTest()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.getStatus()" because the return value of "testBase.testBase.getTest()" is null
at testBase.testBase.logDetails(testBase.java:49)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.getStatus()&amp;quot; because the return value of &amp;quot;testBase.testBase.getTest()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.getStatus()" because the return value of "testBase.testBase.getTest()" is null
at testBase.testBase.logDetails(testBase.java:49)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.getStatus()&amp;quot; because the return value of &amp;quot;testBase.testBase.getTest()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.getStatus()" because the return value of "testBase.testBase.getTest()" is null
at testBase.testBase.logDetails(testBase.java:49)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.getStatus()&amp;quot; because the return value of &amp;quot;testBase.testBase.getTest()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.getStatus()" because the return value of "testBase.testBase.getTest()" is null
at testBase.testBase.logDetails(testBase.java:49)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterMethod logDetails" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logDetails -->
  <testcase classname="testBase.testBase" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="testSauceDemo.locked_out_user" name="login_locked_User" time="7.254"/>
  <testcase classname="testSauceDemo.login_ProblemUser" name="login_Problem_User" time="7.321"/>
  <testcase classname="testSauceDemo.performance_glitch_user" name="login_glitch_User" time="12.324"/>
  <testcase classname="testSauceDemo.TestValidCompleteFlow" name="validloginpage" time="7.033"/>
  <testcase classname="testSauceDemo.TestValidCompleteFlow" name="addProductToCart" time="0.0">
    <skipped/>
  </testcase> <!-- addProductToCart -->
  <testcase classname="testSauceDemo.TestValidCompleteFlow" name="enterUserInfo" time="0.0">
    <skipped/>
  </testcase> <!-- enterUserInfo -->
  <testcase classname="testSauceDemo.TestValidCompleteFlow" name="Checkout" time="0.0">
    <skipped/>
  </testcase> <!-- Checkout -->
  <testcase classname="testSauceDemo.TestValidCompleteFlow" name="completeCheckout" time="0.0">
    <skipped/>
  </testcase> <!-- completeCheckout -->
  <testcase classname="testBase.testBase" name="@BeforeTest initExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initExtentReport -->
  <testcase classname="testBase.testBase" name="@AfterTest flushExtent" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest flushExtent -->
  <testcase classname="testBase.testBase" name="@AfterTest flushExtent" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest flushExtent -->
  <testcase classname="testBase.testBase" name="@BeforeTest initExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initExtentReport -->
  <testcase classname="testBase.testBase" name="@BeforeTest initExtentReport" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest initExtentReport -->
  <testcase classname="testBase.testBase" name="@AfterTest flushExtent" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest flushExtent -->
</testsuite> <!-- Test -->
